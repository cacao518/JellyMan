// Fill out your copyright notice in the Description page of Project Settings.


#include "ProjectileComp.h"

UProjectileComp::UProjectileComp()
:
LifeTime    ( 0 ),
LifeTimeAcc ( 0 )
{
	PrimaryComponentTick.bCanEverTick = true;
}

UProjectileComp::~UProjectileComp()
{

}

/////////////////////////////////////////////////////////////////////////////////////////////////////
//// @brief Begin
/////////////////////////////////////////////////////////////////////////////////////////////////////
void UProjectileComp::BeginPlay()
{
	Super::BeginPlay();

	_Init();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////
//// @brief Tick
/////////////////////////////////////////////////////////////////////////////////////////////////////
void UProjectileComp::TickComponent( float DeltaTime, ELevelTick TickType, FActorComponentTickFunction* ThisTickFunction )
{
	Super::TickComponent( DeltaTime, TickType, ThisTickFunction );

	_ProcessMove();
	_ProcessTime( DeltaTime );
}

/////////////////////////////////////////////////////////////////////////////////////////////////////
//// @brief 공격 성공 처리를 한다.
/////////////////////////////////////////////////////////////////////////////////////////////////////
void UProjectileComp::OnAttackSuccess()
{
	Stat.Hp = 0;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////
//// @brief 초기화 한다.
/////////////////////////////////////////////////////////////////////////////////////////////////////
void UProjectileComp::_Init()
{
	SetAttackCollInfo( AttackCollInfo );
	SetIsEnabledAttackColl( true );
}

/////////////////////////////////////////////////////////////////////////////////////////////////////
//// @brief 이동 관련 로직을 수행한다.
/////////////////////////////////////////////////////////////////////////////////////////////////////
void UProjectileComp::_ProcessMove()
{
	const FRotator rotation = OwningActor->GetActorRotation();
	const FRotator yawRotation( 0, rotation.Yaw, 0 );
	const FVector  direction = FRotationMatrix( yawRotation ).GetUnitAxis( EAxis::X );

	OwningActor->SetActorLocation( OwningActor->GetActorLocation() + ( direction * ( 3.f * Stat.MoveSpeed ) ), true );
}

/////////////////////////////////////////////////////////////////////////////////////////////////////
//// @brief 시간 관련 로직을 수행한다.
/////////////////////////////////////////////////////////////////////////////////////////////////////
void UProjectileComp::_ProcessTime( float InDeltaTime )
{
	LifeTimeAcc += InDeltaTime;

	if( LifeTimeAcc >= LifeTime )
		Stat.Hp = 0;
}